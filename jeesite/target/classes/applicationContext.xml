<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

		<!-- 引入外部资源 -->
		<context:property-placeholder location="classpath:jdbc.properties"/>
		<!-- 开启扫描 -->
		<context:component-scan base-package="com.zhidisoft.**.service"/>
		<!-- 进行datasource 配置 -->
		<bean class="com.mchange.v2.c3p0.ComboPooledDataSource" id="datasource">
				<!-- 数据库连接信息 -->
			<property value="${jdbc.driverClass}" name="driverClass"/>
			<property value="${jdbc.jdbcUrl}" name="jdbcUrl"/>
			<property value="${jdbc.user}" name="user"/>
			<property value="${jdbc.password}" name="password"/>
				<!-- 数据库基本配置 -->
			<property value="${jdbc.maxPoolSize}" name="maxPoolSize"/>
			<property value="${jdbc.minPoolSize}" name="minPoolSize"/>
			<property value="${jdbc.initialPoolSize}" name="initialPoolSize"/>
			<property value="${jdbc.maxConnectionAge}" name="maxConnectionAge"/>
			<property value="${jdbc.maxIdleTime}" name="maxIdleTime"/>
		</bean>
			<!-- 配置sessionfactory -->
		<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlsessionfactory">
					<!-- 引入连接池 -->
			<property name="dataSource" ref="datasource"/>
				<!-- 引入mybatis基本配置文件 -->
			<property value="classpath:mybatis.cfg.xml" name="configLocation"/>
			<!-- 引入映射文件，当此处映射文件与下方接口扫描类中扫描的包中的接口同名同包时，可以省略 -->
		<!-- <property name="mapperLocations"> <array> <value>classpath：com/zhidisoft/**/dao/*.xml</value> </array> </property> -->
		</bean>
		<!-- 扫描接口所在包，通过配置的sessionfactory跟相关包中接口定义的方法，进行方法功能的封装，生产代理对象 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
				<!-- 引入上方的sessionfactory -->
			<property value="sqlsessionfactory" name="beanName"/>
				<!-- 指定扫描哪些jar包下的接口 -->
				<!-- 如果这里的包中接口跟映射文件同包同名，上方的某些配置可省略 -->
			<property value="com.zhidisoft.**.dao" name="basePackage"/>
		</bean>
		<!-- 配置事务管理器 -->
		<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
		<property name="dataSource" ref="datasource"/>
		</bean>
		<!-- 配置事务通知 (进行事务策略管理)-->
		<tx:advice id="txadvice" transaction-manager="transactionManager">
		<tx:attributes>
		<!--增加的方法 -->
		<tx:method name="save*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		<tx:method name="insert*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		<tx:method name="add*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		<!-- 删除的方法 -->
		<tx:method name="delete*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		<tx:method name="del*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		<!-- 修改的方法 -->
		<tx:method name="update*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		<tx:method name="edit*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		<!-- 查找的方法 -->
		<tx:method name="find*" read-only="true" propagation="REQUIRED" isolation="DEFAULT"/>
		<tx:method name="get*" read-only="true" propagation="REQUIRED" isolation="DEFAULT"/>
		<tx:method name="selsct*" read-only="true" propagation="REQUIRED" isolation="DEFAULT"/>
		<!-- 默认的方法 -->
		<tx:method name="*" read-only="false" propagation="REQUIRED" isolation="DEFAULT"/>
		</tx:attributes>
		</tx:advice>
		<!-- 将事务通知绑定到切面中 -->
		<aop:config>
		<aop:advisor pointcut="execution(* com.zhidisoft..service.*.*(..))" advice-ref="txadvice"/>
		</aop:config>
</beans>