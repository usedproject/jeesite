<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidisoft.business.dao.EmailTemplateDao">
  <resultMap id="BaseResultMap" type="com.zhidisoft.business.entity.EmailTemplate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="createBy" jdbcType="INTEGER" property="createby" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="updateBy" jdbcType="INTEGER" property="updateby" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_email_template
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zhidisoft.business.entity.EmailTemplate">
    insert into tb_email_template (id, subject, content, 
      order_id, createTime, createBy, 
      updateTime, updateBy)
    values (#{id,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{createby,jdbcType=INTEGER}, 
      #{updatetime,jdbcType=TIMESTAMP}, #{updateby,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.zhidisoft.business.entity.EmailTemplate">
    update tb_email_template
    set subject = #{subject,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      createBy = #{createby,jdbcType=INTEGER},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      updateBy = #{updateby,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, subject, content, order_id, createTime, createBy, updateTime, updateBy
    from tb_email_template
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 查询所有的邮件模板 -->
  <select id="selectAll" resultMap="BaseResultMap">
    select id, subject, content, order_id, createTime, createBy, updateTime, updateBy
    from tb_email_template
  </select>
  
  <!-- 分页查询EmailTemplate的记录 -->
  <select id="selectEmailByPage" resultMap="BaseResultMap">
  	select * from tb_email_template 
  	<where>
  		<if test="subject!=null and subject!=''">
  			subject = #{subject}
  		</if>
  	</where>
  	limit  #{page}, #{rows}
  </select>
  
  <!-- 获取EamilTemplate表中记录的数量 -->
  <select id="getCount" resultType="integer">
  	select count(1) from tb_email_template
  </select>
  
  <!-- 向邮件模板表中添加记录 -->
  <insert id="addEmailTemplate">
  	insert into tb_email_template(subject, content, order_id, createTime, createBy) 
  	values(#{emailTemplate.subject}, #{emailTemplate.content}, #{emailTemplate.orderId}, #{emailTemplate.createtime}, #{emailTemplate.createby})
  </insert>
  
  <!-- 修改邮件模板 -->
  <update id="editTemplate">
  	update tb_email_template set subject = #{emailTemplate.subject}, content = #{emailTemplate.content}, 
  	order_id = #{emailTemplate.orderId}, updatetime = #{emailTemplate.updatetime}, 
  	updateby = #{emailTemplate.updateby} where id = #{id}
  </update>
  
  <!-- 根据id删除邮件模板 -->
  <update id="removeTemplate">
  	update tb_email_template set status=1 where id = #{id}
  </update>
</mapper>